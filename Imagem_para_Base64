{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "755f0fe5-8624-4867-bbe2-965adb292a87",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "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\n"
     ]
    }
   ],
   "source": [
    "import base64\n",
    "\n",
    "# Função para converter uma imagem para base64\n",
    "def image_to_base64(image_path):\n",
    "    with open(image_path, \"rb\") as image_file:\n",
    "        return base64.b64encode(image_file.read()).decode('utf-8')\n",
    "\n",
    "# Caminho da nova imagem\n",
    "new_image_path = 'C:/Users/maikr/Documents/GitHub/geo-scripts/plugins/Georondonia/images/georo_icone.png'  # Substitua pelo caminho da sua imagem\n",
    "\n",
    "# Converter a imagem e obter a string base64\n",
    "base64_string = image_to_base64(new_image_path)\n",
    "\n",
    "# Adicionar a nova chave ao dicionário\n",
    "#dic_color['logo_geo'] = base64_string  # Substitua 'nova_chave' pelo nome que você deseja usar\n",
    "\n",
    "print(base64_string)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d7fcb36-4aec-4a23-aa83-59e136aea3c7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
